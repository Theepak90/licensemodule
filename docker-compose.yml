version: '3.8'

services:
  # Torro License Manager Application
  torro-license:
    build: .
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongo:27017/torro_licenses
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-here}
      - LICENSE_ENCRYPTION_KEY=${LICENSE_ENCRYPTION_KEY:-your-32-character-encryption-key}
      - JWT_EXPIRES_IN=7d
      - PORT=5000
      - ADMIN_EMAIL=${ADMIN_EMAIL:-admin@torro.com}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin123}
    depends_on:
      - mongo
    volumes:
      - license_data:/app/data
      - license_backups:/app/backups
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MongoDB Database
  mongo:
    image: mongo:4.4
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-password}
      - MONGO_INITDB_DATABASE=torro_licenses
    volumes:
      - mongo_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    restart: unless-stopped
    command: mongod --auth

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - torro-license
    restart: unless-stopped
    profiles:
      - production

volumes:
  mongo_data:
    driver: local
  license_data:
    driver: local
  license_backups:
    driver: local

networks:
  default:
    name: torro-license-network

